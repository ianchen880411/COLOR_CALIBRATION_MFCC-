// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (9e07567d).
//
// CaControl.tli
//
// Wrapper implementations for Win32 type library C:\Program Files\CA-SDK\Control\CaControl.oca
// compiler-generated file created 11/06/02 at 18:07:39 - DO NOT EDIT!

#pragma once

//
// interface __CaControl wrapper method implementations
//

inline HRESULT __CaControl::GotFocus ( ) {
    HRESULT _hr = raw_GotFocus();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT __CaControl::LostFocus ( ) {
    HRESULT _hr = raw_LostFocus();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT __CaControl::DragDrop ( struct Control * * Source, float * X, float * Y ) {
    HRESULT _hr = raw_DragDrop(Source, X, Y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT __CaControl::DragOver ( struct Control * * Source, float * X, float * Y, short * State ) {
    HRESULT _hr = raw_DragOver(Source, X, Y, State);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT __CaControl::Validate ( VARIANT_BOOL * Cancel ) {
    HRESULT _hr = raw_Validate(Cancel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT __CaControl::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _Event0 wrapper method implementations
//

inline HRESULT _Event0::GotFocus ( short * Index ) {
    HRESULT _hr = raw_GotFocus(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT _Event0::LostFocus ( short * Index ) {
    HRESULT _hr = raw_LostFocus(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT _Event0::DragDrop ( short * Index, struct Control * * Source, float * X, float * Y ) {
    HRESULT _hr = raw_DragDrop(Index, Source, X, Y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT _Event0::DragOver ( short * Index, struct Control * * Source, float * X, float * Y, short * State ) {
    HRESULT _hr = raw_DragOver(Index, Source, X, Y, State);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT _Event0::Validate ( short * Index, VARIANT_BOOL * Cancel ) {
    HRESULT _hr = raw_Validate(Index, Cancel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT _Event0::Update ( short * Index ) {
    HRESULT _hr = raw_Update(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface _CaControl wrapper method implementations
//

inline void _CaControl::PutRefCa ( struct ICa * * _arg1 ) {
    _com_dispatch_method(this, 0x68030006, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x4009", _arg1);
}

inline ICaPtr _CaControl::GetCa ( ) {
    struct ICa * _result;
    _com_dispatch_method(this, 0x68030006, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ICaPtr(_result, false);
}

inline void _CaControl::PutRefProbe ( struct IProbe * * _arg1 ) {
    _com_dispatch_method(this, 0x68030005, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x4009", _arg1);
}

inline IProbePtr _CaControl::GetProbe ( ) {
    struct IProbe * _result;
    _com_dispatch_method(this, 0x68030005, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IProbePtr(_result, false);
}

inline void _CaControl::PutRefMemory ( struct IMemory * * _arg1 ) {
    _com_dispatch_method(this, 0x68030004, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x4009", _arg1);
}

inline IMemoryPtr _CaControl::GetMemory ( ) {
    struct IMemory * _result;
    _com_dispatch_method(this, 0x68030004, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IMemoryPtr(_result, false);
}

inline void _CaControl::PutStdColor ( long * _arg1 ) {
    _com_dispatch_method(this, 0x68030003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x4003", _arg1);
}

inline long _CaControl::GetStdColor ( ) {
    long _result;
    _com_dispatch_method(this, 0x68030003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutVGType ( BSTR * _arg1 ) {
    _com_dispatch_method(this, 0x68030002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x4008", _arg1);
}

inline _bstr_t _CaControl::GetVGType ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x68030002, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline void _CaControl::PutVGTiming ( BSTR * _arg1 ) {
    _com_dispatch_method(this, 0x68030001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x4008", _arg1);
}

inline _bstr_t _CaControl::GetVGTiming ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x68030001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline void _CaControl::PutVGPattern ( BSTR * _arg1 ) {
    _com_dispatch_method(this, 0x68030000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x4008", _arg1);
}

inline _bstr_t _CaControl::GetVGPattern ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x68030000, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline HRESULT _CaControl::Load ( BSTR * strDataName ) {
    return _com_dispatch_method(this, 0x6003000d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", strDataName);
}

inline HRESULT _CaControl::Save ( BSTR * strDataName ) {
    return _com_dispatch_method(this, 0x6003000e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", strDataName);
}

inline HRESULT _CaControl::UpdateCaInfo ( ) {
    return _com_dispatch_method(this, 0x6003000f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

inline HRESULT _CaControl::UpdateMemoryInfo ( ) {
    return _com_dispatch_method(this, 0x60030010, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

inline _bstr_t _CaControl::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x80010000, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline short _CaControl::GetIndex ( ) {
    short _result;
    _com_dispatch_method(this, 0x80010001, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

inline float _CaControl::GetLeft ( ) {
    float _result;
    _com_dispatch_method(this, 0x80010003, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutLeft ( float _arg1 ) {
    _com_dispatch_method(this, 0x80010003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

inline float _CaControl::GetTop ( ) {
    float _result;
    _com_dispatch_method(this, 0x80010004, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutTop ( float _arg1 ) {
    _com_dispatch_method(this, 0x80010004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

inline float _CaControl::GetWidth ( ) {
    float _result;
    _com_dispatch_method(this, 0x80010005, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutWidth ( float _arg1 ) {
    _com_dispatch_method(this, 0x80010005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

inline float _CaControl::GetHeight ( ) {
    float _result;
    _com_dispatch_method(this, 0x80010006, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutHeight ( float _arg1 ) {
    _com_dispatch_method(this, 0x80010006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

inline VARIANT_BOOL _CaControl::GetVisible ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x80010007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x80010007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

inline IDispatchPtr _CaControl::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x80010008, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

inline short _CaControl::GetDragMode ( ) {
    short _result;
    _com_dispatch_method(this, 0x80010009, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutDragMode ( short _arg1 ) {
    _com_dispatch_method(this, 0x80010009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0002", _arg1);
}

inline PicturePtr _CaControl::GetDragIcon ( ) {
    struct Picture * _result;
    _com_dispatch_method(this, 0x8001000a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PicturePtr(_result, false);
}

inline void _CaControl::PutDragIcon ( struct Picture * _arg1 ) {
    _com_dispatch_method(this, 0x8001000a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

inline void _CaControl::PutRefDragIcon ( struct Picture * _arg1 ) {
    _com_dispatch_method(this, 0x8001000a, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

inline _bstr_t _CaControl::GetTag ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8001000b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline void _CaControl::PutTag ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8001000b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

inline VARIANT_BOOL _CaControl::GetTabStop ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8001000e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutTabStop ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8001000e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

inline short _CaControl::GetTabIndex ( ) {
    short _result;
    _com_dispatch_method(this, 0x8001000f, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutTabIndex ( short _arg1 ) {
    _com_dispatch_method(this, 0x8001000f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0002", _arg1);
}

inline IDispatchPtr _CaControl::GetObject ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x8001001c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

inline long _CaControl::GetHelpContextID ( ) {
    long _result;
    _com_dispatch_method(this, 0x80010032, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutHelpContextID ( long _arg1 ) {
    _com_dispatch_method(this, 0x80010032, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

inline long _CaControl::GetWhatsThisHelpID ( ) {
    long _result;
    _com_dispatch_method(this, 0x80010046, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutWhatsThisHelpID ( long _arg1 ) {
    _com_dispatch_method(this, 0x80010046, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

inline IDispatchPtr _CaControl::GetContainer ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x80010047, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

inline void _CaControl::PutRefContainer ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x80010047, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

inline VARIANT_BOOL _CaControl::GetCausesValidation ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x80010048, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

inline void _CaControl::PutCausesValidation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x80010048, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

inline _bstr_t _CaControl::GetToolTipText ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8001004a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline void _CaControl::PutToolTipText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8001004a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

inline HRESULT _CaControl::SetFocus ( ) {
    return _com_dispatch_method(this, 0x80011000, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

inline HRESULT _CaControl::ZOrder ( const _variant_t & Position ) {
    return _com_dispatch_method(this, 0x80011001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Position);
}

inline HRESULT _CaControl::Move ( float Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    return _com_dispatch_method(this, 0x80011002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x080c\x080c\x080c", Left, &Top, &Width, &Height);
}

inline HRESULT _CaControl::Drag ( const _variant_t & Action ) {
    return _com_dispatch_method(this, 0x80011003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Action);
}

inline HRESULT _CaControl::ShowWhatsThis ( ) {
    return _com_dispatch_method(this, 0x80011004, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface _PBrowse1 wrapper method implementations
//

inline void _PBrowse1::PutRefCa ( struct ICa * * _arg1 ) {
    _com_dispatch_method(this, 0x68030006, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x4009", _arg1);
}

inline ICaPtr _PBrowse1::GetCa ( ) {
    struct ICa * _result;
    _com_dispatch_method(this, 0x68030006, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ICaPtr(_result, false);
}

inline void _PBrowse1::PutRefProbe ( struct IProbe * * _arg1 ) {
    _com_dispatch_method(this, 0x68030005, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x4009", _arg1);
}

inline IProbePtr _PBrowse1::GetProbe ( ) {
    struct IProbe * _result;
    _com_dispatch_method(this, 0x68030005, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IProbePtr(_result, false);
}

inline void _PBrowse1::PutRefMemory ( struct IMemory * * _arg1 ) {
    _com_dispatch_method(this, 0x68030004, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x4009", _arg1);
}

inline IMemoryPtr _PBrowse1::GetMemory ( ) {
    struct IMemory * _result;
    _com_dispatch_method(this, 0x68030004, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IMemoryPtr(_result, false);
}

inline void _PBrowse1::PutStdColor ( long * _arg1 ) {
    _com_dispatch_method(this, 0x68030003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x4003", _arg1);
}

inline long _PBrowse1::GetStdColor ( ) {
    long _result;
    _com_dispatch_method(this, 0x68030003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutVGType ( BSTR * _arg1 ) {
    _com_dispatch_method(this, 0x68030002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x4008", _arg1);
}

inline _bstr_t _PBrowse1::GetVGType ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x68030002, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline void _PBrowse1::PutVGTiming ( BSTR * _arg1 ) {
    _com_dispatch_method(this, 0x68030001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x4008", _arg1);
}

inline _bstr_t _PBrowse1::GetVGTiming ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x68030001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline void _PBrowse1::PutVGPattern ( BSTR * _arg1 ) {
    _com_dispatch_method(this, 0x68030000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x4008", _arg1);
}

inline _bstr_t _PBrowse1::GetVGPattern ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x68030000, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline HRESULT _PBrowse1::Load ( BSTR * strDataName ) {
    return _com_dispatch_method(this, 0x6003000d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", strDataName);
}

inline HRESULT _PBrowse1::Save ( BSTR * strDataName ) {
    return _com_dispatch_method(this, 0x6003000e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", strDataName);
}

inline HRESULT _PBrowse1::UpdateCaInfo ( ) {
    return _com_dispatch_method(this, 0x6003000f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

inline HRESULT _PBrowse1::UpdateMemoryInfo ( ) {
    return _com_dispatch_method(this, 0x60030010, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

inline _bstr_t _PBrowse1::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x80010000, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline void _PBrowse1::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x80010000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

inline short _PBrowse1::GetIndex ( ) {
    short _result;
    _com_dispatch_method(this, 0x80010001, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutIndex ( short _arg1 ) {
    _com_dispatch_method(this, 0x80010001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0002", _arg1);
}

inline float _PBrowse1::GetLeft ( ) {
    float _result;
    _com_dispatch_method(this, 0x80010003, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutLeft ( float _arg1 ) {
    _com_dispatch_method(this, 0x80010003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

inline float _PBrowse1::GetTop ( ) {
    float _result;
    _com_dispatch_method(this, 0x80010004, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutTop ( float _arg1 ) {
    _com_dispatch_method(this, 0x80010004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

inline float _PBrowse1::GetWidth ( ) {
    float _result;
    _com_dispatch_method(this, 0x80010005, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutWidth ( float _arg1 ) {
    _com_dispatch_method(this, 0x80010005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

inline float _PBrowse1::GetHeight ( ) {
    float _result;
    _com_dispatch_method(this, 0x80010006, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutHeight ( float _arg1 ) {
    _com_dispatch_method(this, 0x80010006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

inline VARIANT_BOOL _PBrowse1::GetVisible ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x80010007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x80010007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

inline enum DragModeConstants _PBrowse1::GetDragMode ( ) {
    enum DragModeConstants _result;
    _com_dispatch_method(this, 0x80010009, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutDragMode ( enum DragModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x80010009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

inline PicturePtr _PBrowse1::GetDragIcon ( ) {
    struct Picture * _result;
    _com_dispatch_method(this, 0x8001000a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PicturePtr(_result, false);
}

inline void _PBrowse1::PutDragIcon ( struct Picture * _arg1 ) {
    _com_dispatch_method(this, 0x8001000a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

inline void _PBrowse1::PutRefDragIcon ( struct Picture * _arg1 ) {
    _com_dispatch_method(this, 0x8001000a, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

inline _bstr_t _PBrowse1::GetTag ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8001000b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline void _PBrowse1::PutTag ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8001000b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

inline VARIANT_BOOL _PBrowse1::GetTabStop ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8001000e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutTabStop ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8001000e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

inline short _PBrowse1::GetTabIndex ( ) {
    short _result;
    _com_dispatch_method(this, 0x8001000f, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutTabIndex ( short _arg1 ) {
    _com_dispatch_method(this, 0x8001000f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0002", _arg1);
}

inline long _PBrowse1::GetHelpContextID ( ) {
    long _result;
    _com_dispatch_method(this, 0x80010032, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutHelpContextID ( long _arg1 ) {
    _com_dispatch_method(this, 0x80010032, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

inline long _PBrowse1::GetWhatsThisHelpID ( ) {
    long _result;
    _com_dispatch_method(this, 0x80010046, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutWhatsThisHelpID ( long _arg1 ) {
    _com_dispatch_method(this, 0x80010046, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

inline VARIANT_BOOL _PBrowse1::GetCausesValidation ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x80010048, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

inline void _PBrowse1::PutCausesValidation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x80010048, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

inline _bstr_t _PBrowse1::GetToolTipText ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8001004a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

inline void _PBrowse1::PutToolTipText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8001004a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

inline HRESULT _PBrowse1::SetFocus ( ) {
    return _com_dispatch_method(this, 0x80011000, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

inline HRESULT _PBrowse1::ZOrder ( const _variant_t & Position ) {
    return _com_dispatch_method(this, 0x80011001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Position);
}

inline HRESULT _PBrowse1::Move ( float Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    return _com_dispatch_method(this, 0x80011002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x080c\x080c\x080c", Left, &Top, &Width, &Height);
}

inline HRESULT _PBrowse1::Drag ( const _variant_t & Action ) {
    return _com_dispatch_method(this, 0x80011003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Action);
}

inline HRESULT _PBrowse1::ShowWhatsThis ( ) {
    return _com_dispatch_method(this, 0x80011004, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
