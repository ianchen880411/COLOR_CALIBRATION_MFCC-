// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (9e07567d).
//
// CaControl.tlh
//
// C++ source equivalent of Win32 type library C:\Program Files\CA-SDK\Control\CaControl.oca
// compiler-generated file created 11/06/02 at 18:07:39 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//  #import "C:\Program Files\Microsoft Visual Studio\VB98\VB6.OLB"
//  #import "D:\comn\UgawaSample\CA200Srvr.dll"
//  #import "C:\WINNT\System32\MSVBVM60.DLL\3"
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("d4fe5419-d8d2-4108-a42c-fa7bf50b19f4"))
/* interface */ __CaControl;
struct __declspec(uuid("9e47b811-f9cb-4bf3-bf7f-205bde4d8d41"))
/* interface */ _Event0;
struct __declspec(uuid("bacd4b80-be3d-4a97-b0bf-24b06c6a888c"))
/* dispinterface */ _CaControl;
struct __declspec(uuid("2f9a4610-5708-47d5-8629-2d5e6bfe8c38"))
/* dispinterface */ _PBrowse1;
struct /* coclass */ CaControl;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(__CaControl, __uuidof(__CaControl));
_COM_SMARTPTR_TYPEDEF(_Event0, __uuidof(_Event0));
_COM_SMARTPTR_TYPEDEF(_CaControl, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(_PBrowse1, __uuidof(IDispatch));

//
// Type library items
//

struct __declspec(uuid("d4fe5419-d8d2-4108-a42c-fa7bf50b19f4"))
__CaControl : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT GotFocus ( );
    HRESULT LostFocus ( );
    HRESULT DragDrop (
        struct Control * * Source,
        float * X,
        float * Y );
    HRESULT DragOver (
        struct Control * * Source,
        float * X,
        float * Y,
        short * State );
    HRESULT Validate (
        VARIANT_BOOL * Cancel );
    HRESULT Update ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_GotFocus ( ) = 0;
    virtual HRESULT __stdcall raw_LostFocus ( ) = 0;
    virtual HRESULT _VtblGapPlaceholder1( ) { return E_NOTIMPL; }
    virtual HRESULT _VtblGapPlaceholder2( ) { return E_NOTIMPL; }
    virtual HRESULT _VtblGapPlaceholder3( ) { return E_NOTIMPL; }
    virtual HRESULT _VtblGapPlaceholder4( ) { return E_NOTIMPL; }
    virtual HRESULT __stdcall raw_DragDrop (
        struct Control * * Source,
        float * X,
        float * Y ) = 0;
    virtual HRESULT __stdcall raw_DragOver (
        struct Control * * Source,
        float * X,
        float * Y,
        short * State ) = 0;
    virtual HRESULT __stdcall raw_Validate (
        VARIANT_BOOL * Cancel ) = 0;
    virtual HRESULT __stdcall raw_Update ( ) = 0;
};

struct __declspec(uuid("9e47b811-f9cb-4bf3-bf7f-205bde4d8d41"))
_Event0 : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT GotFocus (
        short * Index );
    HRESULT LostFocus (
        short * Index );
    HRESULT DragDrop (
        short * Index,
        struct Control * * Source,
        float * X,
        float * Y );
    HRESULT DragOver (
        short * Index,
        struct Control * * Source,
        float * X,
        float * Y,
        short * State );
    HRESULT Validate (
        short * Index,
        VARIANT_BOOL * Cancel );
    HRESULT Update (
        short * Index );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_GotFocus (
        short * Index ) = 0;
    virtual HRESULT __stdcall raw_LostFocus (
        short * Index ) = 0;
    virtual HRESULT _VtblGapPlaceholder1( ) { return E_NOTIMPL; }
    virtual HRESULT _VtblGapPlaceholder2( ) { return E_NOTIMPL; }
    virtual HRESULT _VtblGapPlaceholder3( ) { return E_NOTIMPL; }
    virtual HRESULT _VtblGapPlaceholder4( ) { return E_NOTIMPL; }
    virtual HRESULT __stdcall raw_DragDrop (
        short * Index,
        struct Control * * Source,
        float * X,
        float * Y ) = 0;
    virtual HRESULT __stdcall raw_DragOver (
        short * Index,
        struct Control * * Source,
        float * X,
        float * Y,
        short * State ) = 0;
    virtual HRESULT __stdcall raw_Validate (
        short * Index,
        VARIANT_BOOL * Cancel ) = 0;
    virtual HRESULT __stdcall raw_Update (
        short * Index ) = 0;
};

struct __declspec(uuid("bacd4b80-be3d-4a97-b0bf-24b06c6a888c"))
_CaControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    float Left;
    __declspec(property(get=GetTop,put=PutTop))
    float Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDragMode,put=PutDragMode))
    short DragMode;
    __declspec(property(get=GetDragIcon,put=PutRefDragIcon))
    PicturePtr DragIcon;
    __declspec(property(get=GetTag,put=PutTag))
    _bstr_t Tag;
    __declspec(property(get=GetTabStop,put=PutTabStop))
    VARIANT_BOOL TabStop;
    __declspec(property(get=GetTabIndex,put=PutTabIndex))
    short TabIndex;
    __declspec(property(get=GetHelpContextID,put=PutHelpContextID))
    long HelpContextID;
    __declspec(property(get=GetWhatsThisHelpID,put=PutWhatsThisHelpID))
    long WhatsThisHelpID;
    __declspec(property(get=GetContainer,put=PutRefContainer))
    IDispatchPtr Container;
    __declspec(property(get=GetObject))
    IDispatchPtr Object;
    __declspec(property(get=GetCausesValidation,put=PutCausesValidation))
    VARIANT_BOOL CausesValidation;
    __declspec(property(get=GetToolTipText,put=PutToolTipText))
    _bstr_t ToolTipText;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    void PutRefCa (
        struct ICa * * _arg1 );
    ICaPtr GetCa ( );
    void PutRefProbe (
        struct IProbe * * _arg1 );
    IProbePtr GetProbe ( );
    void PutRefMemory (
        struct IMemory * * _arg1 );
    IMemoryPtr GetMemory ( );
    void PutStdColor (
        long * _arg1 );
    long GetStdColor ( );
    void PutVGType (
        BSTR * _arg1 );
    _bstr_t GetVGType ( );
    void PutVGTiming (
        BSTR * _arg1 );
    _bstr_t GetVGTiming ( );
    void PutVGPattern (
        BSTR * _arg1 );
    _bstr_t GetVGPattern ( );
    HRESULT Load (
        BSTR * strDataName );
    HRESULT Save (
        BSTR * strDataName );
    HRESULT UpdateCaInfo ( );
    HRESULT UpdateMemoryInfo ( );
    _bstr_t GetName ( );
    short GetIndex ( );
    float GetLeft ( );
    void PutLeft (
        float _arg1 );
    float GetTop ( );
    void PutTop (
        float _arg1 );
    float GetWidth ( );
    void PutWidth (
        float _arg1 );
    float GetHeight ( );
    void PutHeight (
        float _arg1 );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetParent ( );
    short GetDragMode ( );
    void PutDragMode (
        short _arg1 );
    PicturePtr GetDragIcon ( );
    void PutDragIcon (
        struct Picture * _arg1 );
    void PutRefDragIcon (
        struct Picture * _arg1 );
    _bstr_t GetTag ( );
    void PutTag (
        _bstr_t _arg1 );
    VARIANT_BOOL GetTabStop ( );
    void PutTabStop (
        VARIANT_BOOL _arg1 );
    short GetTabIndex ( );
    void PutTabIndex (
        short _arg1 );
    IDispatchPtr GetObject ( );
    long GetHelpContextID ( );
    void PutHelpContextID (
        long _arg1 );
    long GetWhatsThisHelpID ( );
    void PutWhatsThisHelpID (
        long _arg1 );
    IDispatchPtr GetContainer ( );
    void PutRefContainer (
        IDispatch * _arg1 );
    VARIANT_BOOL GetCausesValidation ( );
    void PutCausesValidation (
        VARIANT_BOOL _arg1 );
    _bstr_t GetToolTipText ( );
    void PutToolTipText (
        _bstr_t _arg1 );
    HRESULT SetFocus ( );
    HRESULT ZOrder (
        const _variant_t & Position = vtMissing );
    HRESULT Move (
        float Left,
        const _variant_t & Top = vtMissing,
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing );
    HRESULT Drag (
        const _variant_t & Action = vtMissing );
    HRESULT ShowWhatsThis ( );
};

struct __declspec(uuid("2f9a4610-5708-47d5-8629-2d5e6bfe8c38"))
_PBrowse1 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetIndex,put=PutIndex))
    short Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    float Left;
    __declspec(property(get=GetTop,put=PutTop))
    float Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetDragMode,put=PutDragMode))
    enum DragModeConstants DragMode;
    __declspec(property(get=GetDragIcon,put=PutRefDragIcon))
    PicturePtr DragIcon;
    __declspec(property(get=GetTag,put=PutTag))
    _bstr_t Tag;
    __declspec(property(get=GetTabStop,put=PutTabStop))
    VARIANT_BOOL TabStop;
    __declspec(property(get=GetTabIndex,put=PutTabIndex))
    short TabIndex;
    __declspec(property(get=GetHelpContextID,put=PutHelpContextID))
    long HelpContextID;
    __declspec(property(get=GetWhatsThisHelpID,put=PutWhatsThisHelpID))
    long WhatsThisHelpID;
    __declspec(property(get=GetCausesValidation,put=PutCausesValidation))
    VARIANT_BOOL CausesValidation;
    __declspec(property(get=GetToolTipText,put=PutToolTipText))
    _bstr_t ToolTipText;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    void PutRefCa (
        struct ICa * * _arg1 );
    ICaPtr GetCa ( );
    void PutRefProbe (
        struct IProbe * * _arg1 );
    IProbePtr GetProbe ( );
    void PutRefMemory (
        struct IMemory * * _arg1 );
    IMemoryPtr GetMemory ( );
    void PutStdColor (
        long * _arg1 );
    long GetStdColor ( );
    void PutVGType (
        BSTR * _arg1 );
    _bstr_t GetVGType ( );
    void PutVGTiming (
        BSTR * _arg1 );
    _bstr_t GetVGTiming ( );
    void PutVGPattern (
        BSTR * _arg1 );
    _bstr_t GetVGPattern ( );
    HRESULT Load (
        BSTR * strDataName );
    HRESULT Save (
        BSTR * strDataName );
    HRESULT UpdateCaInfo ( );
    HRESULT UpdateMemoryInfo ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    short GetIndex ( );
    void PutIndex (
        short _arg1 );
    float GetLeft ( );
    void PutLeft (
        float _arg1 );
    float GetTop ( );
    void PutTop (
        float _arg1 );
    float GetWidth ( );
    void PutWidth (
        float _arg1 );
    float GetHeight ( );
    void PutHeight (
        float _arg1 );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    enum DragModeConstants GetDragMode ( );
    void PutDragMode (
        enum DragModeConstants _arg1 );
    PicturePtr GetDragIcon ( );
    void PutDragIcon (
        struct Picture * _arg1 );
    void PutRefDragIcon (
        struct Picture * _arg1 );
    _bstr_t GetTag ( );
    void PutTag (
        _bstr_t _arg1 );
    VARIANT_BOOL GetTabStop ( );
    void PutTabStop (
        VARIANT_BOOL _arg1 );
    short GetTabIndex ( );
    void PutTabIndex (
        short _arg1 );
    long GetHelpContextID ( );
    void PutHelpContextID (
        long _arg1 );
    long GetWhatsThisHelpID ( );
    void PutWhatsThisHelpID (
        long _arg1 );
    VARIANT_BOOL GetCausesValidation ( );
    void PutCausesValidation (
        VARIANT_BOOL _arg1 );
    _bstr_t GetToolTipText ( );
    void PutToolTipText (
        _bstr_t _arg1 );
    HRESULT SetFocus ( );
    HRESULT ZOrder (
        const _variant_t & Position = vtMissing );
    HRESULT Move (
        float Left,
        const _variant_t & Top = vtMissing,
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing );
    HRESULT Drag (
        const _variant_t & Action = vtMissing );
    HRESULT ShowWhatsThis ( );
};

struct __declspec(uuid("fd23ffa0-3255-42b7-8a7b-4108d1d1e372"))
CaControl;
    // [ default ] dispinterface _CaControl
    // [ default, source ] interface __CaControl

//
// Wrapper method implementations
//

#include "CaControl.tli"

#pragma pack(pop)
